// Mocks generated by Mockito 5.4.0 from annotations
// in pokedex/test/data/repositories/pokemon_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:pokedex/data/datasources/local_datasource/local_datasource.dart'
    as _i8;
import 'package:pokedex/data/datasources/remote_datasource/remote_datasource.dart'
    as _i6;
import 'package:pokedex/data/models/pokemon_detail_model.dart' as _i4;
import 'package:pokedex/data/models/pokemon_model.dart' as _i3;
import 'package:shared_preferences/shared_preferences.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePokemonResponseModel_1 extends _i1.SmartFake
    implements _i3.PokemonResponseModel {
  _FakePokemonResponseModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePokemonDetail_2 extends _i1.SmartFake implements _i4.PokemonDetail {
  _FakePokemonDetail_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSharedPreferences_3 extends _i1.SmartFake
    implements _i5.SharedPreferences {
  _FakeSharedPreferences_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDataSource extends _i1.Mock implements _i6.RemoteDataSource {
  MockRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Client);
  @override
  _i7.Future<_i3.PokemonResponseModel> getPokemons(String? url) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPokemons,
          [url],
        ),
        returnValue: _i7.Future<_i3.PokemonResponseModel>.value(
            _FakePokemonResponseModel_1(
          this,
          Invocation.method(
            #getPokemons,
            [url],
          ),
        )),
      ) as _i7.Future<_i3.PokemonResponseModel>);
  @override
  _i7.Future<_i4.PokemonDetail> getPokemonByName(String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPokemonByName,
          [name],
        ),
        returnValue: _i7.Future<_i4.PokemonDetail>.value(_FakePokemonDetail_2(
          this,
          Invocation.method(
            #getPokemonByName,
            [name],
          ),
        )),
      ) as _i7.Future<_i4.PokemonDetail>);
}

/// A class which mocks [LocalDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDatasource extends _i1.Mock implements _i8.LocalDatasource {
  MockLocalDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.SharedPreferences get sharedPreferences => (super.noSuchMethod(
        Invocation.getter(#sharedPreferences),
        returnValue: _FakeSharedPreferences_3(
          this,
          Invocation.getter(#sharedPreferences),
        ),
      ) as _i5.SharedPreferences);
  @override
  String get listKey => (super.noSuchMethod(
        Invocation.getter(#listKey),
        returnValue: '',
      ) as String);
  @override
  List<String> fetchFavouritesList() => (super.noSuchMethod(
        Invocation.method(
          #fetchFavouritesList,
          [],
        ),
        returnValue: <String>[],
      ) as List<String>);
  @override
  _i7.Future<bool> saveToFavouritesList(String? id) => (super.noSuchMethod(
        Invocation.method(
          #saveToFavouritesList,
          [id],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
  @override
  bool checkIfFavourite(String? id) => (super.noSuchMethod(
        Invocation.method(
          #checkIfFavourite,
          [id],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i7.Future<bool> removeFromFavourites(String? id) => (super.noSuchMethod(
        Invocation.method(
          #removeFromFavourites,
          [id],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
}
